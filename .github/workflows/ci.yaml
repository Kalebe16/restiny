name: CI Workflow

on:
  push

env:
  PYTHON_VERSION: "3.14"

jobs:
  verify-version:
    name: Verify version
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Ensure version is not already published on PyPi
        run: |
          VERSION=$(cat ./restiny/__about__.py | grep "__version__" | grep -Eo "[0-9]+\.[0-9]+(\.[0-9]+)?" | head -n1)
          if curl -sSf -o /dev/null "https://pypi.org/pypi/restiny/${VERSION}/json"; then
            echo "Version ${VERSION} already exists on PyPI"
            exit 1
          else
            echo "Version ${VERSION} does not exist on PyPI yet"
          fi

  lint-format:
    name: Linting && formatting checks
    runs-on: ubuntu-latest
    needs: [verify-version]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r ./requirements.dev.txt

      - name: Check lint
        run: |
          ruff format .
          ruff check .

  build-pkg:
    name: Build package
    runs-on: ubuntu-latest
    needs: [lint-format]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r ./requirements.dev.txt

      - name: Build package
        run: |
          python -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: restiny
          path: dist/restiny*

  publish-pkg:
    name: Publish package on PyPi
    runs-on: ubuntu-latest
    needs: [build-pkg]
    if: github.ref_name == 'main'
    permissions:
      id-token: write
      contents: read
    environment:
      name: pypi-publish

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: restiny
          path: dist

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: false

  build-exe:
    name: Build executables for Linux, macOS, and Windows
    runs-on: ${{ matrix.os }}
    needs: [lint-format]

    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
          - os: windows-2022
            arch: amd64
          - os: windows-11-arm
            arch: arm64
          - os: macos-13
            arch: amd64
          - os: macos-latest
            arch: arm64

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Resolve version
        shell: bash
        run: |
          VERSION=$(cat ./restiny/__about__.py | grep "__version__" | grep -Eo "[0-9]+\.[0-9]+(\.[0-9]+)?" | head -n1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Resolved version: $VERSION"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        shell: bash
        run: |
          pyinstaller \
            --onefile \
            --console \
            --name restiny \
            --add-data "restiny/assets:assets" \
            --collect-data textual \
            --collect-submodules textual.widgets \
            --collect-all tree_sitter \
            --collect-all tree_sitter_bash \
            --collect-all tree_sitter_css \
            --collect-all tree_sitter_go \
            --collect-all tree_sitter_html \
            --collect-all tree_sitter_java \
            --collect-all tree_sitter_javascript \
            --collect-all tree_sitter_json \
            --collect-all tree_sitter_markdown \
            --collect-all tree_sitter_python \
            --collect-all tree_sitter_regex \
            --collect-all tree_sitter_rust \
            --collect-all tree_sitter_sql \
            --collect-all tree_sitter_toml \
            --collect-all tree_sitter_xml \
            --collect-all tree_sitter_yaml \
            ./restiny/__main__.py

      - name: Upload executables
        uses: actions/upload-artifact@v4
        with:
          name: restiny-v${{ env.VERSION }}-${{ startsWith(matrix.os, 'ubuntu') && 'linux' || startsWith(matrix.os, 'windows') && 'windows' || startsWith(matrix.os, 'macos') && 'macos' }}-${{ matrix.arch }}
          path: dist/restiny*
          compression-level: 9
          if-no-files-found: error
